# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import absolute_import

import unittest
import datetime

import pbclient
from pbclient.models.tracking_response import TrackingResponse  # noqa: E501
from pbclient.rest import ApiException

class TestTrackingResponse(unittest.TestCase):
    """TrackingResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TrackingResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrackingResponse`
        """
        model = pbclient.models.tracking_response.TrackingResponse()  # noqa: E501
        if include_optional :
            return TrackingResponse(
                package_count = 56, 
                carrier = 'USPS', 
                tracking_number = '', 
                reference_number = '', 
                status = 'In Transit', 
                updated_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                updated_time = '', 
                ship_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                ship_time = '', 
                ship_time_offset = '', 
                estimated_delivery_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                estimated_delivery_time = '', 
                estimated_delivery_time_offset = '', 
                delivery_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                delivery_time = '', 
                delivery_time_offset = '', 
                delivery_location = '', 
                delivery_location_description = '', 
                signed_by = '', 
                weight = 56, 
                weight_oum = 'LBS', 
                reattempt_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                reattempt_time = '', 
                destination_address = pbclient.models.tracking_address.TrackingAddress(
                    name = '', 
                    address1 = '', 
                    address2 = '', 
                    address3 = '', 
                    city = '', 
                    state_or_province = '', 
                    postal_code = 56, 
                    country = '', ), 
                sender_address = pbclient.models.tracking_address.TrackingAddress(
                    name = '', 
                    address1 = '', 
                    address2 = '', 
                    address3 = '', 
                    city = '', 
                    state_or_province = '', 
                    postal_code = 56, 
                    country = '', ), 
                scan_details_list = [
                    pbclient.models.tracking_response_scan_details_list_inner.TrackingResponse_scanDetailsList_inner(
                        event_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        event_time = '', 
                        event_city = '', 
                        event_state_or_province = '', 
                        postal_code = 56, 
                        country = '', 
                        scan_type = '', 
                        scan_description = '', 
                        package_status = '', )
                    ]
            )
        else :
            return TrackingResponse(
        )
        """

    def testTrackingResponse(self):
        """Test TrackingResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
