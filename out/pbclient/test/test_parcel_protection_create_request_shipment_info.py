# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: support@pb.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import absolute_import

import unittest
import datetime

import pbclient
from pbclient.models.parcel_protection_create_request_shipment_info import ParcelProtectionCreateRequestShipmentInfo  # noqa: E501
from pbclient.rest import ApiException

class TestParcelProtectionCreateRequestShipmentInfo(unittest.TestCase):
    """ParcelProtectionCreateRequestShipmentInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ParcelProtectionCreateRequestShipmentInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ParcelProtectionCreateRequestShipmentInfo`
        """
        model = pbclient.models.parcel_protection_create_request_shipment_info.ParcelProtectionCreateRequestShipmentInfo()  # noqa: E501
        if include_optional :
            return ParcelProtectionCreateRequestShipmentInfo(
                tracking_number = '', 
                carrier = 'USPS', 
                service_id = '', 
                insurance_coverage_value = 56, 
                insurance_coverage_value_currency = '', 
                parcel_info = pbclient.models.parcel_protection_create_request_shipment_info_parcel_info.ParcelProtectionCreateRequest_shipmentInfo_parcelInfo(
                    commodity_list = [
                        pbclient.models.parcel_protection_create_request_shipment_info_parcel_info_commodity_list_inner.ParcelProtectionCreateRequest_shipmentInfo_parcelInfo_commodityList_inner(
                            category_path = '', 
                            item_code = '', 
                            name = '', 
                            url = '', )
                        ], ), 
                shipper_info = pbclient.models.parcel_protection_create_request_shipment_info_shipper_info.ParcelProtectionCreateRequest_shipmentInfo_shipperInfo(
                    shipper_id = '', 
                    address = pbclient.models.parcel_protection_create_request_shipment_info_shipper_info_address.ParcelProtectionCreateRequest_shipmentInfo_shipperInfo_address(
                        address_lines = [
                            ''
                            ], 
                        city_town = '', 
                        state_province = '', 
                        postal_code = '', 
                        country_code = '', ), 
                    company_name = '', 
                    family_name = '', 
                    given_name = '', 
                    middle_name = '', 
                    email = '', 
                    phone_numbers = [
                        pbclient.models.phone_numbers_inner.PhoneNumbers_inner(
                            number = '', 
                            type = '', )
                        ], ), 
                consignee_info = pbclient.models.parcel_protection_create_request_shipment_info_consignee_info.ParcelProtectionCreateRequest_shipmentInfo_consigneeInfo(
                    address = pbclient.models.address.Address(
                        address_lines = [
                            ''
                            ], 
                        carrier_route = '', 
                        city_town = '', 
                        company = '', 
                        country_code = '', 
                        delivery_point = '', 
                        email = '', 
                        name = '', 
                        phone = '', 
                        postal_code = '', 
                        residential = True, 
                        state_province = '', 
                        status = 'PARSED', 
                        tax_id = '', 
                        tax_id_type = 'EIN', ), 
                    company_name = '', 
                    family_name = '', 
                    given_name = '', 
                    middle_name = '', 
                    email = '', 
                    phone_numbers = [
                        pbclient.models.phone_numbers_inner.PhoneNumbers_inner(
                            number = '', 
                            type = '', )
                        ], )
            )
        else :
            return ParcelProtectionCreateRequestShipmentInfo(
        )
        """

    def testParcelProtectionCreateRequestShipmentInfo(self):
        """Test ParcelProtectionCreateRequestShipmentInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
