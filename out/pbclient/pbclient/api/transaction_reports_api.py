# coding: utf-8

"""
    Shipping API

    Shipping API Sample.

    The version of the OpenAPI document: 2.0.0
    Contact: support@pb.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import datetime
from pydantic import Field, StrictBool, StrictInt, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from pbclient.models.page_real_transaction_detail_report import PageRealTransactionDetailReport

from pbclient.api_client import ApiClient, RequestSerialized
from pbclient.api_response import ApiResponse
from pbclient.rest import RESTResponseType


class TransactionReportsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_transaction_report(
        self,
        developer_id: Annotated[StrictStr, Field(description="developerId")],
        x_pb_unified_error_structure: Annotated[Optional[StrictBool], Field(description="Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.")] = None,
        from_date: Annotated[Optional[datetime], Field(description="fromDate")] = None,
        ship_details: Optional[StrictInt] = None,
        page: Optional[StrictInt] = None,
        size: Optional[StrictInt] = None,
        print_status: Annotated[Optional[StrictStr], Field(description="printStatus")] = None,
        to_date: Annotated[Optional[datetime], Field(description="toDate")] = None,
        transaction_type: Annotated[Optional[StrictStr], Field(description="transactionType")] = None,
        merchant_id: Annotated[Optional[StrictStr], Field(description="The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant's Shipper ID.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort=<property_name>,<sort_direction>** For example- **sort=transactionId,desc** ")] = None,
        parcel_tracking_number: Annotated[Optional[StrictStr], Field(description="Parcel tracking number of the shipment.")] = None,
        transaction_id: Annotated[Optional[StrictStr], Field(description="The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment's X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId=44397664_ad5aa07-ad7414-a78a-c22b3**")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PageRealTransactionDetailReport:
        """This operation retrieves all transactions for a specified period of time.


        :param developer_id: developerId (required)
        :type developer_id: str
        :param x_pb_unified_error_structure: Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.
        :type x_pb_unified_error_structure: bool
        :param from_date: fromDate
        :type from_date: datetime
        :param ship_details:
        :type ship_details: int
        :param page:
        :type page: int
        :param size:
        :type size: int
        :param print_status: printStatus
        :type print_status: str
        :param to_date: toDate
        :type to_date: datetime
        :param transaction_type: transactionType
        :type transaction_type: str
        :param merchant_id: The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant's Shipper ID.
        :type merchant_id: str
        :param sort: Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort=<property_name>,<sort_direction>** For example- **sort=transactionId,desc** 
        :type sort: str
        :param parcel_tracking_number: Parcel tracking number of the shipment.
        :type parcel_tracking_number: str
        :param transaction_id: The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment's X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId=44397664_ad5aa07-ad7414-a78a-c22b3**
        :type transaction_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_transaction_report_serialize(
            developer_id=developer_id,
            x_pb_unified_error_structure=x_pb_unified_error_structure,
            from_date=from_date,
            ship_details=ship_details,
            page=page,
            size=size,
            print_status=print_status,
            to_date=to_date,
            transaction_type=transaction_type,
            merchant_id=merchant_id,
            sort=sort,
            parcel_tracking_number=parcel_tracking_number,
            transaction_id=transaction_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PageRealTransactionDetailReport",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_transaction_report_with_http_info(
        self,
        developer_id: Annotated[StrictStr, Field(description="developerId")],
        x_pb_unified_error_structure: Annotated[Optional[StrictBool], Field(description="Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.")] = None,
        from_date: Annotated[Optional[datetime], Field(description="fromDate")] = None,
        ship_details: Optional[StrictInt] = None,
        page: Optional[StrictInt] = None,
        size: Optional[StrictInt] = None,
        print_status: Annotated[Optional[StrictStr], Field(description="printStatus")] = None,
        to_date: Annotated[Optional[datetime], Field(description="toDate")] = None,
        transaction_type: Annotated[Optional[StrictStr], Field(description="transactionType")] = None,
        merchant_id: Annotated[Optional[StrictStr], Field(description="The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant's Shipper ID.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort=<property_name>,<sort_direction>** For example- **sort=transactionId,desc** ")] = None,
        parcel_tracking_number: Annotated[Optional[StrictStr], Field(description="Parcel tracking number of the shipment.")] = None,
        transaction_id: Annotated[Optional[StrictStr], Field(description="The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment's X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId=44397664_ad5aa07-ad7414-a78a-c22b3**")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PageRealTransactionDetailReport]:
        """This operation retrieves all transactions for a specified period of time.


        :param developer_id: developerId (required)
        :type developer_id: str
        :param x_pb_unified_error_structure: Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.
        :type x_pb_unified_error_structure: bool
        :param from_date: fromDate
        :type from_date: datetime
        :param ship_details:
        :type ship_details: int
        :param page:
        :type page: int
        :param size:
        :type size: int
        :param print_status: printStatus
        :type print_status: str
        :param to_date: toDate
        :type to_date: datetime
        :param transaction_type: transactionType
        :type transaction_type: str
        :param merchant_id: The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant's Shipper ID.
        :type merchant_id: str
        :param sort: Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort=<property_name>,<sort_direction>** For example- **sort=transactionId,desc** 
        :type sort: str
        :param parcel_tracking_number: Parcel tracking number of the shipment.
        :type parcel_tracking_number: str
        :param transaction_id: The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment's X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId=44397664_ad5aa07-ad7414-a78a-c22b3**
        :type transaction_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_transaction_report_serialize(
            developer_id=developer_id,
            x_pb_unified_error_structure=x_pb_unified_error_structure,
            from_date=from_date,
            ship_details=ship_details,
            page=page,
            size=size,
            print_status=print_status,
            to_date=to_date,
            transaction_type=transaction_type,
            merchant_id=merchant_id,
            sort=sort,
            parcel_tracking_number=parcel_tracking_number,
            transaction_id=transaction_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PageRealTransactionDetailReport",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_transaction_report_without_preload_content(
        self,
        developer_id: Annotated[StrictStr, Field(description="developerId")],
        x_pb_unified_error_structure: Annotated[Optional[StrictBool], Field(description="Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.")] = None,
        from_date: Annotated[Optional[datetime], Field(description="fromDate")] = None,
        ship_details: Optional[StrictInt] = None,
        page: Optional[StrictInt] = None,
        size: Optional[StrictInt] = None,
        print_status: Annotated[Optional[StrictStr], Field(description="printStatus")] = None,
        to_date: Annotated[Optional[datetime], Field(description="toDate")] = None,
        transaction_type: Annotated[Optional[StrictStr], Field(description="transactionType")] = None,
        merchant_id: Annotated[Optional[StrictStr], Field(description="The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant's Shipper ID.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort=<property_name>,<sort_direction>** For example- **sort=transactionId,desc** ")] = None,
        parcel_tracking_number: Annotated[Optional[StrictStr], Field(description="Parcel tracking number of the shipment.")] = None,
        transaction_id: Annotated[Optional[StrictStr], Field(description="The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment's X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId=44397664_ad5aa07-ad7414-a78a-c22b3**")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """This operation retrieves all transactions for a specified period of time.


        :param developer_id: developerId (required)
        :type developer_id: str
        :param x_pb_unified_error_structure: Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.
        :type x_pb_unified_error_structure: bool
        :param from_date: fromDate
        :type from_date: datetime
        :param ship_details:
        :type ship_details: int
        :param page:
        :type page: int
        :param size:
        :type size: int
        :param print_status: printStatus
        :type print_status: str
        :param to_date: toDate
        :type to_date: datetime
        :param transaction_type: transactionType
        :type transaction_type: str
        :param merchant_id: The value of the postalReportingNumber element in the [merchant object](https://shipping.pitneybowes.com/reference/resource-objects.html). This value is also the merchant's Shipper ID.
        :type merchant_id: str
        :param sort: Defines a property to sort on and the sort order. Sort order can be ascending (asc) or descending (desc). Use the following form-  * **sort=<property_name>,<sort_direction>** For example- **sort=transactionId,desc** 
        :type sort: str
        :param parcel_tracking_number: Parcel tracking number of the shipment.
        :type parcel_tracking_number: str
        :param transaction_id: The unique string that identifies all the transactions associated with a given shipment. The string comprises the developer ID and the shipment's X-PB-TransactionId, separated by an underscore (_). For example-  * **transactionId=44397664_ad5aa07-ad7414-a78a-c22b3**
        :type transaction_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_transaction_report_serialize(
            developer_id=developer_id,
            x_pb_unified_error_structure=x_pb_unified_error_structure,
            from_date=from_date,
            ship_details=ship_details,
            page=page,
            size=size,
            print_status=print_status,
            to_date=to_date,
            transaction_type=transaction_type,
            merchant_id=merchant_id,
            sort=sort,
            parcel_tracking_number=parcel_tracking_number,
            transaction_id=transaction_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PageRealTransactionDetailReport",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_transaction_report_serialize(
        self,
        developer_id,
        x_pb_unified_error_structure,
        from_date,
        ship_details,
        page,
        size,
        print_status,
        to_date,
        transaction_type,
        merchant_id,
        sort,
        parcel_tracking_number,
        transaction_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if developer_id is not None:
            _path_params['developerId'] = developer_id
        # process the query parameters
        if from_date is not None:
            if isinstance(from_date, datetime):
                _query_params.append(
                    (
                        'fromDate',
                        from_date.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('fromDate', from_date))
            
        if ship_details is not None:
            
            _query_params.append(('shipDetails', ship_details))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if print_status is not None:
            
            _query_params.append(('printStatus', print_status))
            
        if to_date is not None:
            if isinstance(to_date, datetime):
                _query_params.append(
                    (
                        'toDate',
                        to_date.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('toDate', to_date))
            
        if transaction_type is not None:
            
            _query_params.append(('transactionType', transaction_type))
            
        if merchant_id is not None:
            
            _query_params.append(('merchantId', merchant_id))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if parcel_tracking_number is not None:
            
            _query_params.append(('parcelTrackingNumber', parcel_tracking_number))
            
        # process the header parameters
        if x_pb_unified_error_structure is not None:
            _header_params['X-PB-UnifiedErrorStructure'] = x_pb_unified_error_structure
        if transaction_id is not None:
            _header_params['transactionId'] = transaction_id
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'oAuth2ClientCredentials'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v4/ledger/developers/{developerId}/transactions/reports',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


